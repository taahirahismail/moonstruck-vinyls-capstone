{"ast":null,"code":"const emitterify = require('utilise/emitterify');\nmodule.exports = function event(node, index) {\n  node = node.host && node.host.nodeName ? node.host : node;\n  if (node.on) return;\n  node.listeners = {};\n  const on = o => {\n    const type = o.type.split('.').shift();\n    if (!node.listeners[type]) node.addEventListener(type, node.listeners[type] = event => !event.detail || !event.detail.emitted ? emit(type, [event, node.state, node]) : 0);\n  };\n  const off = o => {\n    if (!node.on[o.type] || !node.on[o.type].length) {\n      node.removeEventListener(o.type, node.listeners[o.type]);\n      delete node.listeners[o.type];\n    }\n  };\n  emitterify(node, {\n    on,\n    off\n  });\n  const {\n    emit\n  } = node;\n  node.emit = function (type, params) {\n    const detail = {\n        params,\n        emitted: true\n      },\n      event = new CustomEvent(type, {\n        detail,\n        bubbles: false,\n        cancelable: true\n      });\n    node.dispatchEvent(event);\n    return emit(type, event);\n  };\n};","map":{"version":3,"names":["emitterify","require","module","exports","event","node","index","host","nodeName","on","listeners","o","type","split","shift","addEventListener","detail","emitted","emit","state","off","length","removeEventListener","params","CustomEvent","bubbles","cancelable","dispatchEvent"],"sources":["C:/Users/Student/Desktop/Development/Capstone/moonstruck-vinyls-capstone/frontend/node_modules/@compone/event/index.js"],"sourcesContent":["const emitterify = require('utilise/emitterify')\r\n\r\nmodule.exports = function event(node, index) {\r\n  node = node.host && node.host.nodeName ? node.host : node\r\n  if (node.on) return\r\n  node.listeners = {}\r\n\r\n  const on = o => {\r\n    const type = o.type.split('.').shift()\r\n    if (!node.listeners[type])\r\n      node.addEventListener(type, node.listeners[type] = \r\n        event => (!event.detail || !event.detail.emitted ? emit(type, [event, node.state, node]) : 0)\r\n      )\r\n  }\r\n\r\n  const off = o => {\r\n    if (!node.on[o.type] || !node.on[o.type].length) {\r\n      node.removeEventListener(o.type, node.listeners[o.type])\r\n      delete node.listeners[o.type]\r\n    }\r\n  }\r\n\r\n  emitterify(node, { on, off })\r\n  const { emit } = node\r\n\r\n  node.emit = function(type, params){\r\n    const detail = { params, emitted: true }\r\n        , event = new CustomEvent(type, { detail, bubbles: false, cancelable: true })\r\n    node.dispatchEvent(event)\r\n    return emit(type, event)\r\n  }\r\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAEhDC,MAAM,CAACC,OAAO,GAAG,SAASC,KAAKA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC3CD,IAAI,GAAGA,IAAI,CAACE,IAAI,IAAIF,IAAI,CAACE,IAAI,CAACC,QAAQ,GAAGH,IAAI,CAACE,IAAI,GAAGF,IAAI;EACzD,IAAIA,IAAI,CAACI,EAAE,EAAE;EACbJ,IAAI,CAACK,SAAS,GAAG,CAAC,CAAC;EAEnB,MAAMD,EAAE,GAAGE,CAAC,IAAI;IACd,MAAMC,IAAI,GAAGD,CAAC,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC;IACtC,IAAI,CAACT,IAAI,CAACK,SAAS,CAACE,IAAI,CAAC,EACvBP,IAAI,CAACU,gBAAgB,CAACH,IAAI,EAAEP,IAAI,CAACK,SAAS,CAACE,IAAI,CAAC,GAC9CR,KAAK,IAAK,CAACA,KAAK,CAACY,MAAM,IAAI,CAACZ,KAAK,CAACY,MAAM,CAACC,OAAO,GAAGC,IAAI,CAACN,IAAI,EAAE,CAACR,KAAK,EAAEC,IAAI,CAACc,KAAK,EAAEd,IAAI,CAAC,CAAC,GAAG,CAC7F,CAAC;EACL,CAAC;EAED,MAAMe,GAAG,GAAGT,CAAC,IAAI;IACf,IAAI,CAACN,IAAI,CAACI,EAAE,CAACE,CAAC,CAACC,IAAI,CAAC,IAAI,CAACP,IAAI,CAACI,EAAE,CAACE,CAAC,CAACC,IAAI,CAAC,CAACS,MAAM,EAAE;MAC/ChB,IAAI,CAACiB,mBAAmB,CAACX,CAAC,CAACC,IAAI,EAAEP,IAAI,CAACK,SAAS,CAACC,CAAC,CAACC,IAAI,CAAC,CAAC;MACxD,OAAOP,IAAI,CAACK,SAAS,CAACC,CAAC,CAACC,IAAI,CAAC;IAC/B;EACF,CAAC;EAEDZ,UAAU,CAACK,IAAI,EAAE;IAAEI,EAAE;IAAEW;EAAI,CAAC,CAAC;EAC7B,MAAM;IAAEF;EAAK,CAAC,GAAGb,IAAI;EAErBA,IAAI,CAACa,IAAI,GAAG,UAASN,IAAI,EAAEW,MAAM,EAAC;IAChC,MAAMP,MAAM,GAAG;QAAEO,MAAM;QAAEN,OAAO,EAAE;MAAK,CAAC;MAClCb,KAAK,GAAG,IAAIoB,WAAW,CAACZ,IAAI,EAAE;QAAEI,MAAM;QAAES,OAAO,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAK,CAAC,CAAC;IACjFrB,IAAI,CAACsB,aAAa,CAACvB,KAAK,CAAC;IACzB,OAAOc,IAAI,CAACN,IAAI,EAAER,KAAK,CAAC;EAC1B,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}