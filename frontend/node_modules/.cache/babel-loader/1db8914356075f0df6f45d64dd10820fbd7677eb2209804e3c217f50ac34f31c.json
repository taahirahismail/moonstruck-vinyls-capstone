{"ast":null,"code":"import SpinnerComp from \"../components/SpinnerComp.vue\";\nexport default {\n  components: {\n    SpinnerComp\n  },\n  computed: {\n    products() {\n      return this.$store.state.products;\n    },\n    product() {\n      return this.$store.state.product;\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"fetchProducts\");\n  },\n  methods: {\n    deleteProduct(prodID) {\n      if (confirm(\"Are you sure you want to delete this product?\")) {\n        this.$store.dispatch(\"deleteProduct\", prodID);\n        setTimeout(() => {\n          location.reload();\n        }, 500);\n      }\n    }\n  }\n};","map":{"version":3,"names":["SpinnerComp","components","computed","products","$store","state","product","mounted","dispatch","methods","deleteProduct","prodID","confirm","setTimeout","location","reload"],"sources":["C:\\Users\\Student\\Desktop\\Development\\Capstone\\moonstruck-vinyls-capstone\\frontend\\src\\views\\AdminView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1 class=\"heading-text\">Admin !</h1>\r\n\r\n        <div>\r\n            <h3>Products</h3>\r\n            <!-- insert add products component here -->\r\n            <div class=\"table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Product ID</th>\r\n                            <th>Album Name</th>\r\n                            <th>Album Artist</th>\r\n                            <th>Genre</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th>Product Image</th>\r\n                            <th>Album Description</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody v-for=\"product in products\" :key=\"product.prodID\">\r\n                        <tr v-if=\"products\">\r\n                            <td>{{ product.prodID }}</td>\r\n                            <td>{{ product.albumName }}</td>\r\n                            <td>{{ product.albumArtist }}</td>\r\n                            <td>{{ product.genre }}</td>\r\n                            <td>{{ product.price }}</td>\r\n                            <td>{{ product.quantity }}</td>\r\n                            <td class=\"prod-img\">\r\n                                <img :src=\"product.prodImg\" :alt=\"product.albumName\"\r\n                                loading=\"lazy\"\r\n                                class=\"img-fluid prod-img\">\r\n                            </td>\r\n                            <td>{{ product.albumDesc }}</td>\r\n                            <td>\r\n                                <!-- insert update button here -->\r\n                                <button class=\"btn del-btn\" @click=\"deleteProduct(product.prodID)\">Delete</button>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr v-else>\r\n                            <!-- insert spinner here -->\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport SpinnerComp from \"../components/SpinnerComp.vue\";\r\n\r\nexport default {\r\n    components: {\r\n        SpinnerComp\r\n    },\r\n\r\n    computed: {\r\n        products() {\r\n            return this.$store.state.products;\r\n        },\r\n        product() {\r\n            return this.$store.state.product;\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.$store.dispatch(\"fetchProducts\");\r\n    },\r\n\r\n    methods: {\r\n        deleteProduct(prodID) {\r\n            if (confirm(\"Are you sure you want to delete this product?\")) {\r\n                this.$store.dispatch(\"deleteProduct\", prodID);\r\n                setTimeout(() => {\r\n                    location.reload();\r\n                }, 500);\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n\r\n</style>"],"mappings":"AAsDA,OAAOA,WAAU,MAAO,+BAA+B;AAEvD,eAAe;EACXC,UAAU,EAAE;IACRD;EACJ,CAAC;EAEDE,QAAQ,EAAE;IACNC,QAAQA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,QAAQ;IACrC,CAAC;IACDG,OAAOA,CAAA,EAAG;MACN,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,OAAO;IACpC;EACJ,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,eAAe,CAAC;EACzC,CAAC;EAEDC,OAAO,EAAE;IACLC,aAAaA,CAACC,MAAM,EAAE;MAClB,IAAIC,OAAO,CAAC,+CAA+C,CAAC,EAAE;QAC1D,IAAI,CAACR,MAAM,CAACI,QAAQ,CAAC,eAAe,EAAEG,MAAM,CAAC;QAC7CE,UAAU,CAAC,MAAM;UACbC,QAAQ,CAACC,MAAM,CAAC,CAAC;QACrB,CAAC,EAAE,GAAG,CAAC;MACX;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}